#Compact way to create list
[x * x for x in range(10)] #Output: [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
[[x, pow(x,3)] for x in range(5)]  #Output: [[0, 0], [1, 1], [2, 8], [3, 27], [4, 64]]
[ x * x for x in range(10) if x % 3 == 0] #Output: [0, 9, 36, 81]
y = [i * i for i in range(10) if i % 3 ==0]
z = []
for i in range(10):
    if i % 3 == 0:
        z.append(i*i)
print(z)  #Output: [0, 9, 36, 81]
#append can stick the elements to the end of the list (add element to the list)

#A method to create strings from a list of strings
#.join join all elements in the list with a separator
lst = ['Once', 'upon', 'a', 'time']
''.join(lst) #Output: 'Onceuponatime'
' '.join(lst)  #Output: 'Once upon a time'
'_?_!_'.join(lst) #Output: 'Once_?_!_upon_?_!_a_?_!_time'

#Collections: list, dictionary, tuples, sets
#list: 1)mutable 2)allows for duplicates 3)objects can be of any type 
#dictionary: 1)mutable 2)unordered collection of key:value pairs 3)key must be unique and no duplicates, and immutable type 
#tupleï¼šlike list but immutable
#set: unordered collection of unique immutable objects

#Dictionary
purse = dict()
purse['money'] = 12
purse['candy'] = 3
purse['tissues'] = 75
print(purse) #Output: {'money': 12, 'candy': 3, 'tissues': 75}
print(purse['candy']) #Output: 3
purse['candy'] = purse['candy'] + 2
print(purse) #Output: {'money': 12, 'candy': 5, 'tissues': 75}







